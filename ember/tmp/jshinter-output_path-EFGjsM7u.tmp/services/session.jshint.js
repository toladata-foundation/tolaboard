QUnit.module('JSHint | services/session.js');
QUnit.test('should pass jshint', function(assert) {
  assert.expect(1);
  assert.ok(false, 'services/session.js should pass jshint.\nservices/session.js: line 1, col 1, \'import\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 3, col 1, \'export\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 11, col 5, \'concise methods\' is available in ES6 (use \'esversion: 6\') or Mozilla JS extensions (use moz).\nservices/session.js: line 12, col 44, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 20, col 24, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 21, col 51, Missing semicolon.\nservices/session.js: line 26, col 40, Missing semicolon.\nservices/session.js: line 27, col 22, Missing semicolon.\nservices/session.js: line 29, col 64, Missing semicolon.\nservices/session.js: line 40, col 15, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 41, col 65, Missing semicolon.\nservices/session.js: line 42, col 13, Missing semicolon.\nservices/session.js: line 43, col 11, Missing semicolon.\nservices/session.js: line 48, col 7, \'concise methods\' is available in ES6 (use \'esversion: 6\') or Mozilla JS extensions (use moz).\nservices/session.js: line 49, col 44, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 57, col 24, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 59, col 59, Missing semicolon.\nservices/session.js: line 67, col 46, Missing semicolon.\nservices/session.js: line 68, col 41, Missing semicolon.\nservices/session.js: line 71, col 22, Missing semicolon.\nservices/session.js: line 74, col 15, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 75, col 28, Missing semicolon.\nservices/session.js: line 76, col 58, Missing semicolon.\nservices/session.js: line 78, col 13, Missing semicolon.\nservices/session.js: line 79, col 11, Missing semicolon.\nservices/session.js: line 82, col 5, \'concise methods\' is available in ES6 (use \'esversion: 6\') or Mozilla JS extensions (use moz).\nservices/session.js: line 83, col 33, Missing semicolon.\nservices/session.js: line 84, col 45, Missing semicolon.\nservices/session.js: line 85, col 51, Missing semicolon.\nservices/session.js: line 86, col 40, Missing semicolon.\nservices/session.js: line 87, col 40, Missing semicolon.\nservices/session.js: line 106, col 44, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 112, col 24, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 113, col 67, Missing semicolon.\nservices/session.js: line 126, col 22, Missing semicolon.\nservices/session.js: line 128, col 15, \'arrow function syntax (=>)\' is only available in ES6 (use \'esversion: 6\').\nservices/session.js: line 129, col 40, Missing semicolon.\nservices/session.js: line 131, col 13, Missing semicolon.\nservices/session.js: line 132, col 11, Missing semicolon.\n\n39 errors');
});
